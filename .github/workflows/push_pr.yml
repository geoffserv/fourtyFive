name: Helm Master Branch

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the
  #   master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# The file in this repo containing the test suite
env:
  testSuite: 'test_gfxTest.py'

# A workflow run is made up of one or more jobs that can run sequentially or in
#   parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 "${{ env.testSuite }}" --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 "${{ env.testSuite }}" --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest "${{ env.testSuite }}"

          # Uncomment for an uploaded artifact of test results
#         pytest "${{ env.testSuite }}" --doctest-modules --junitxml=junit/test-results.xml
#    - name: Upload pytest test results
#      uses: actions/upload-artifact@v2
#      with:
#        name: pytest-results
#        path: junit/test-results.xml
#      # Use always() to always run this step to publish test results when there are test failures
#      if: ${{ always() }}
